
Zdefiniowaæ typ Set opisujacy zbiory liczbowe o elementach z zakresu od 0 do 63.

Do pamiêtania elementów zbioru wykorzystaæ pole typu ulong,
gdzie k-ty bit równy 1 oznacza, ¿e element k nale¿y do zbioru.

Zdefiniowaæ wszystkie operacje niezbêdne do tego, aby skompilowa³ siê program z pliku Lab07.cs.
W pliku Lab07.cs nie wolno dokonywaæ ¿adnych zmian (oczywiœcie oprócz odkomentowania kodu).
Nie nale¿y definiowaæ operacji zbêdnych, ale trzeba zadbaæ, aby przy kompilacji nie by³o ¿adnych ostrze¿eñ.

Uwagi:

0) Operacje implementowaæ w kolejnoœci w jakiej pojawiaj¹ siê w funkcji Main (to u³atwi pracê)

1) konstruktor z parametrem typu ulong po prostu inicjuje wewnêtrzn¹ reprezentacjê zbioru swoim argumentem

2) konstruktor z parametrami typu int tworzy zbiór, do którego nale¿¹ wskazane w parametrach liczby
   (jeœli s¹ spoza zakresu 0-63 to sa ignorowane)
   
3) konwerter do typu ulong zwraca wewnêtrzn¹ reprezentacjê liczby (dozwolona jest jedynie konwersja jawna)

4) konwerter z typu int tworzy zbiór jednoelementowy zawieraj¹cy wskazany element
   (jeœli jest on spoza zakresu 0-63 to tworzy zbiór pusty)
   
5) operatory binarne - znaczenie oczywiste (jak to operatory)

6) operator ~   - dope³nienie zbioru

7) indeksator
   - przy odczycie - zwraca wartoœæ True/False w zale¿noœæi od tego czy element okreœlony przez indeks nale¿y do zbioru
   - przy zapisie  - wstawia (dla argumentu True) lub usuwa (dla argumentu False) element okreœlony przez indeks
   
8) w³aœciwoœæ Count zwraca liczbê elementów nale¿¹cych do zbioru

9) W³aœciwoœæ Min zwraca najmniejszy element zbioru (dla zbioru pustego zwraca -1)

10) zadbaæ aby nie da³o siê zmieniæ zbioru pustego

11) skrót (hash) zbioru powinien byæ taki sam jak skrót pola typu ulong s³u¿¹cego do jego reprezentacji

12) do wypisywania zbioru s³u¿y metoda ToString()
    ma ona wypisywaæ elementy nale¿¹ce do zbioru czyli coœ w rodzaju { 2 3 5 7 } 
    (metoda ToString() jest u¿ywana wewnêtrznie przez .NET - w programie nie ma jawnych wywo³añ!)

13) do wyznaczenia wszystkich podzbiorów mo¿na wykorzystaæ rekurencyjn¹ metodê pomocnicz¹ o nag³ówku
       private static void SubsetsRec(Set s1, Set s2, Set[] tab, ref int i)
    algorytm wyznaczania podzbiorów jest nieco podobny do tego z zadania o stacjach radiowych      
